[tool.poetry]
name = "churn-prediction-mlops"
version = "1.0.0"
description = "Production-grade MLOps pipeline for customer churn prediction"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"

# Core ML
scikit-learn = "^1.3.2"
xgboost = "^2.0.2"
pandas = "^2.1.3"
numpy = "^1.26.2"

# MLOps Tools - Feast with compatible FastAPI version
feast = { version = "*", extras = ["redis"] }
mlflow = { version = "*" }
prefect = "3.4.24"

# API Framework - Compatible with Feast
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}  # to match FastAPI
pydantic = "^2.5.0"  # for compatibility
pydantic-settings = "^2.1.0"  # for compatibility

# Monitoring and Observability
prometheus-client =">=0.20.0"
evidently = "^0.4.8"

# Data Validation
pandera = "^0.17.2"
great-expectations = "^0.18.4"

# Database & Storage
psycopg2-binary = "^2.9.9"
redis = "^4.5.0"

# Utilities
python-dotenv = "^1.0.0"
pyyaml = "^6.0.1"
click = "^8.1.7"
tqdm = "^4.66.1"
python-multipart = "^0.0.7"
httpx = "^0.26.0"  # for compatibility
joblib = "^1.3.2"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
pytest-watch = "^4.2.0"

# Code Quality
black = "^23.11.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
bandit = "^1.7.5"
isort = "^5.12.0"

# Notebook support
jupyter = "^1.0.0"
ipykernel = "^6.26.0"
matplotlib = "^3.8.2"
seaborn = "^0.13.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]